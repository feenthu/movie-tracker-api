spring:
  application:
    name: MovieTrackerAPI
  
  datasource:
    # Build JDBC URL from components to avoid parsing issues
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:railway}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 1
      connection-timeout: 30000
  
  jpa:
    hibernate:
      ddl-auto: update  # Use 'update' for production to preserve data
    show-sql: false  # Disable SQL logging in production
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
  
  # Disable H2 console in production
  h2:
    console:
      enabled: false
  
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - email
              - profile
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
            scope:
              - email
              - public_profile
          apple:
            client-id: ${APPLE_CLIENT_ID}
            client-secret: ${APPLE_CLIENT_SECRET}
            scope:
              - email
              - name
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          apple:
            authorization-uri: https://appleid.apple.com/auth/authorize
            token-uri: https://appleid.apple.com/auth/token
            jwk-set-uri: https://appleid.apple.com/auth/keys
            user-info-uri: https://appleid.apple.com/auth/userinfo
            user-name-attribute: sub

# Custom authentication configuration
app:
  auth:
    local-auth-enabled: ${LOCAL_AUTH_ENABLED:true}
    oauth2-enabled: ${OAUTH2_ENABLED:true}
    jwt:
      secret: ${JWT_SECRET}
      expiration-hours: ${JWT_EXPIRATION_HOURS:24}
  oauth2:
    redirect-uri: ${OAUTH2_REDIRECT_URI:https://movie-tracker-web-production.up.railway.app/auth/callback-v2}
  api-base-url: ${API_BASE_URL:https://movie-tracker-api-production.up.railway.app}

# GraphQL configuration
dgs:
  graphql:
    path: /graphql
    graphiql:
      enabled: ${GRAPHIQL_ENABLED:false}  # Disable in production
      path: /graphiql

# Production logging - REDUCED to prevent Railway rate limiting
logging:
  level:
    com.movietracker.api: INFO
    org.springframework.boot: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: ERROR
    org.hibernate.type.descriptor.sql.BasicBinder: ERROR
    org.springframework.security: WARN
    org.springframework.boot.actuator: WARN
    org.springframework.boot.autoconfigure: WARN
    org.springframework.context: WARN
    org.springframework.beans: WARN
    root: WARN
  pattern:
    console: "%d{HH:mm:ss} %-5level %logger{20} - %msg%n"

# Server configuration
server:
  port: ${PORT:8080}
  servlet:
    context-path: /

# Actuator configuration for health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info
      base-path: /
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      enabled: true
